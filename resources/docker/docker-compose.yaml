version: "3.2"

services:
  cava-data:
    build:
      context: ../../
      dockerfile: ./resources/docker/Dockerfile
    image: cormorack/cava-data:${TAG}
    ports:
      - 8000:80
      - 8787:8787
    volumes:
      - ../../:/app/:consistent
    links:
      - "celery-worker:celery-worker"
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - GOOGLE_SERVICE_JSON=${GOOGLE_SERVICE_JSON}
      - REDIS_URI=redis://redis-service
      - RABBITMQ_URI=amqp://guest@rabbitmq-service:5672//
      - WORKERS=2
      - LOG_LEVEL=info
    networks:
      - cava-network
  celery-worker:
    build:
      context: ../../
      dockerfile: ./resources/docker/Dockerfile
    image: cormorack/cava-data:${TAG}
    deploy:
      replicas: 2
    command: celery -A cava_data.api.workers.tasks worker -E -l info -Q data-queue -c 1 -P gevent
    links:
      - "redis-service:redis-service"
      - "rabbitmq-service:rabbitmq-service"
    volumes:
      - ../../:/app/:consistent
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - REDIS_URI=redis://redis-service
      - RABBITMQ_URI=amqp://guest@rabbitmq-service:5672//
    networks:
      - cava-network
  redis-service:
    image: redis:alpine3.13
    ports:
      - 6379:6379
    expose:
      - 6379
    networks:
      - cava-network
  rabbitmq-service:
    image: rabbitmq:3-alpine
    ports:
      - 5672:5672
    expose:
      - 5672
    networks:
      - cava-network
networks:
  cava-network:
